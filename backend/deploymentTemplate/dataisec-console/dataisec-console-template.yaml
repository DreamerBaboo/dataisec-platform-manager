# values.yaml
name: dataisec-console
replicaCount: 1

image:
  repository: {REPOSITORY}:{REPOSITORY_PORT}/dataisec-console
  tag: "0.1.0"
  pullPolicy: IfNotPresent
  insecureRegistry: true

imagePullSecrets: []
nameOverride: "dataisec-console"
fullnameOverride: "dataisec-console"

service:
  type: NodePort
  port: 3000
  targetPort: 3000
  nodePort: 32000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources:
  limits:
    cpu: "2"
    memory: 4Gi
  requests:
    cpu: "0.5"
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

serviceAccount:
  create: true
  annotations: {}
  name: "dataisec"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

livenessProbe:
  enabled: true
  httpGet:
    path: /
    port: 3000
    scheme: HTTPS
  initialDelaySeconds: 30  # 从默认的10秒增加到60秒
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 10
  successThreshold: 1

readinessProbe:
  enabled: true
  httpGet:
    path: /
    port: 3000
    scheme: HTTPS
  periodSeconds: 20
  initialDelaySeconds: 60  # 从默认的10秒增加到60秒
  timeoutSeconds: 5
  failureThreshold: 10
  successThreshold: 1


nodeSelector:
  kubernetes.io/hostname: {node-role.opensearch: master}

tolerations: []

affinity: {}

# Custom environment variables for your application
env:
  - name: WEB_PORT
    value: 8433
  - name: DB_NODE
    value: https://opensearch-cluster-master-headless.opensearch.svc.cluster.local:9200
    #value: http://opensearch-cluster-master-headless.opensearch.svc.cluster.local:9200

# Application specific configurations can go here
appConfig:
  featureFlagA: true
  maxConnections: 100
